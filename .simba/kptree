#!/bin/bash

kptree=$0

# The only argument this script accepts is either a PID or a PIDFILE.
# A PIDFILE contains 1 PID per line

# Argument is a PIDFILE
if [[ -f $1 ]]; then

   # In case of an error stop processing and return the error code
   set -o errexit

   while read -r pid; do
         $kptree $pid
   done < $1

   exit 0
fi

pid=$1

if [[ -z "$pid" ]]; then
   exit 0
fi


child_process=$(pgrep --parent $pid)

if [[ -n "$child_process" ]]; then
   $kptree $child_process
fi

SIGTERM=15
kill -$SIGTERM $pid >/dev/null 2>&1
exit_code=$?

if [[ $exit_code -eq 0 ]]; then
   echo Killed \($pid\)
else
   echo Failed to kill \($pid\)
fi

exit $exit_code
